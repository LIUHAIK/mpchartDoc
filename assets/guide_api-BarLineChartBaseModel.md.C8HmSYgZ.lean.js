import{_ as e,c as a,a7 as r,o as d}from"./chunks/framework.CS1J3kmr.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/api-BarLineChartBaseModel.md","filePath":"guide/api-BarLineChartBaseModel.md"}'),n={name:"guide/api-BarLineChartBaseModel.md"};function s(o,t,i,h,l,b){return d(),a("div",null,t[0]||(t[0]=[r('<h3 id="二、barlinechartbasemodel" tabindex="-1"><strong>二、BarLineChartBaseModel</strong> <a class="header-anchor" href="#二、barlinechartbasemodel" aria-label="Permalink to &quot;**二、BarLineChartBaseModel**&quot;">​</a></h3><p>柱状图基础类</p><table tabindex="0"><thead><tr><th>方法名</th><th>描述</th></tr></thead><tbody><tr><td>calcMinMax</td><td>计算坐标的最大最小值。</td></tr><tr><td>calculateOffsets</td><td>计算图表offset。</td></tr><tr><td>drawGridBackground</td><td>绘制图表背景。</td></tr><tr><td>getAxis</td><td>根据Y轴位置获取Y轴对象。</td></tr><tr><td>getAxisLeft</td><td>获取左Y轴对象。</td></tr><tr><td>getAxisRight</td><td>获取右Y轴对象。</td></tr><tr><td>getMinOffset</td><td>获取最小Offset值。</td></tr><tr><td>getRendererLeftYAxis</td><td>获取左Y轴渲染器。</td></tr><tr><td>getRendererRightYAxis</td><td>获取右Y轴渲染器。</td></tr><tr><td>getRendererXAxis</td><td>获取X轴渲染器。</td></tr><tr><td>setLongPressCursorEnabled</td><td>设置长按游标能力标识。</td></tr><tr><td>getLongPressCursorEnabled</td><td>获取长按游标能力标识。</td></tr><tr><td>setLongPressDuration</td><td>设置长按响应时长。</td></tr><tr><td>getLongPressDuration</td><td>获取长按响应时长。</td></tr><tr><td>setSwipeEnabled</td><td>设置手势滑动响应能力（结合长按游标能力使用）。</td></tr><tr><td>getSwipeEnabled</td><td>获取手势滑动响应能力标识（结合长按游标能力使用）。</td></tr></tbody></table><h2 id="_1-calcminmax" tabindex="-1"><strong>1.calcMinMax</strong> <a class="header-anchor" href="#_1-calcminmax" aria-label="Permalink to &quot;**1.calcMinMax**&quot;">​</a></h2><p>protected calcMinMax(): void;</p><p>计算坐标的最大最小值。</p><h2 id="_2-calculateoffsets" tabindex="-1"><strong>2.calculateOffsets</strong> <a class="header-anchor" href="#_2-calculateoffsets" aria-label="Permalink to &quot;**2.calculateOffsets**&quot;">​</a></h2><p>public calculateOffsets(): void;</p><p>计算图表offset。</p><h2 id="_3-drawgridbackground" tabindex="-1"><strong>3.drawGridBackground</strong> <a class="header-anchor" href="#_3-drawgridbackground" aria-label="Permalink to &quot;**3.drawGridBackground**&quot;">​</a></h2><p>protected drawGridBackground(c: CanvasRenderingContext2D): void;</p><p>绘制图表背景。</p><p>参数：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>c</td><td>CanvasRenderingContext2D</td><td>是</td><td>图表绘制的上下文。</td></tr></tbody></table><h2 id="_4-getaxis" tabindex="-1"><strong>4.getAxis</strong> <a class="header-anchor" href="#_4-getaxis" aria-label="Permalink to &quot;**4.getAxis**&quot;">​</a></h2><p>public getAxis(axis: AxisDependency): YAxis | null;</p><p>根据Y轴位置获取Y轴对象。</p><p>参数：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>axis</td><td>AxisDependency</td><td>是</td><td>Y轴位置。</td></tr></tbody></table><p>返回值：</p><table tabindex="0"><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>YAxis | null</td><td>获取Y轴对象。</td></tr></tbody></table><h2 id="_5-getaxisleft" tabindex="-1"><strong>5.getAxisLeft</strong> <a class="header-anchor" href="#_5-getaxisleft" aria-label="Permalink to &quot;**5.getAxisLeft**&quot;">​</a></h2><p>public getAxisLeft(): YAxis | null;</p><p>获取左Y轴对象。</p><p>返回值：</p><table tabindex="0"><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>YAxis | null</td><td>获取Y轴对象。</td></tr></tbody></table><h2 id="_6-getaxisright" tabindex="-1"><strong>6.getAxisRight</strong> <a class="header-anchor" href="#_6-getaxisright" aria-label="Permalink to &quot;**6.getAxisRight**&quot;">​</a></h2><p>public getAxisRight(): YAxis | null;</p><p>获取右Y轴对象。</p><p>返回值：</p><table tabindex="0"><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>YAxis | null</td><td>获取Y轴对象。</td></tr></tbody></table><h2 id="_7-getminoffset" tabindex="-1"><strong>7.getMinOffset</strong> <a class="header-anchor" href="#_7-getminoffset" aria-label="Permalink to &quot;**7.getMinOffset**&quot;">​</a></h2><p>public getMinOffset(): number;</p><p>获取最小Offset值。</p><p>返回值：</p><table tabindex="0"><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>number</td><td>获取最小Offset值。</td></tr></tbody></table><h2 id="_8-getrendererleftyaxis" tabindex="-1"><strong>8.getRendererLeftYAxis</strong> <a class="header-anchor" href="#_8-getrendererleftyaxis" aria-label="Permalink to &quot;**8.getRendererLeftYAxis**&quot;">​</a></h2><p>public getRendererLeftYAxis(): YAxisRenderer | null;</p><p>获取左Y轴渲染器。</p><p>返回值：</p><table tabindex="0"><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>YAxisRenderer | null</td><td>获取左Y轴渲染器。</td></tr></tbody></table><h2 id="_9-getrendererrightyaxis" tabindex="-1"><strong>9.getRendererRightYAxis</strong> <a class="header-anchor" href="#_9-getrendererrightyaxis" aria-label="Permalink to &quot;**9.getRendererRightYAxis**&quot;">​</a></h2><p>public getRendererRightYAxis(): YAxisRenderer | null;</p><p>获取右Y轴渲染器。</p><p>返回值：</p><table tabindex="0"><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>YAxisRenderer | null</td><td>获取右Y轴渲染器。</td></tr></tbody></table><h2 id="_10-getrendererxaxis" tabindex="-1"><strong>10.getRendererXAxis</strong> <a class="header-anchor" href="#_10-getrendererxaxis" aria-label="Permalink to &quot;**10.getRendererXAxis**&quot;">​</a></h2><p>public getRendererXAxis(): XAxisRenderer | null;</p><p>获取X轴渲染器。</p><p>返回值：</p><table tabindex="0"><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>XAxisRenderer | null</td><td>获取X轴渲染器。</td></tr></tbody></table><h2 id="_11-setlongpresscursorenabled" tabindex="-1"><strong>11.setLongPressCursorEnabled</strong> <a class="header-anchor" href="#_11-setlongpresscursorenabled" aria-label="Permalink to &quot;**11.setLongPressCursorEnabled**&quot;">​</a></h2><p>public setLongPressCursorEnabled(enabled: boolean): void;</p><p>设置长按游标能力标识。</p><p>参数：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>enabled</td><td>boolean</td><td>是</td><td>能力标识。</td></tr></tbody></table><p>返回值：无</p><h2 id="_12-getlongpresscursorenabled" tabindex="-1"><strong>12.getLongPressCursorEnabled</strong> <a class="header-anchor" href="#_12-getlongpresscursorenabled" aria-label="Permalink to &quot;**12.getLongPressCursorEnabled**&quot;">​</a></h2><p>public getLongPressCursorEnabled(): boolean;</p><p>获取长按游标能力标识。</p><p>参数：无</p><p>返回值：</p><table tabindex="0"><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>boolean</td><td>长按游标能力标识。</td></tr></tbody></table><h2 id="_13-setlongpressduration" tabindex="-1"><strong>13.setLongPressDuration</strong> <a class="header-anchor" href="#_13-setlongpressduration" aria-label="Permalink to &quot;**13.setLongPressDuration**&quot;">​</a></h2><p>public setLongPressDuration(duration: number): void;</p><p>设置长按响应时长。</p><p>参数：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>duration</td><td>number</td><td>是</td><td>时长。</td></tr></tbody></table><p>返回值：无</p><h2 id="_14-getlongpressduration" tabindex="-1"><strong>14.getLongPressDuration</strong> <a class="header-anchor" href="#_14-getlongpressduration" aria-label="Permalink to &quot;**14.getLongPressDuration**&quot;">​</a></h2><p>public getLongPressDuration(): number;</p><p>获取长按响应时长。</p><p>参数：无</p><p>返回值：</p><table tabindex="0"><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>number</td><td>响应时长。</td></tr></tbody></table><h2 id="_15-setswipeenabled" tabindex="-1"><strong>15.setSwipeEnabled</strong> <a class="header-anchor" href="#_15-setswipeenabled" aria-label="Permalink to &quot;**15.setSwipeEnabled**&quot;">​</a></h2><p>public setSwipeEnabled(enabled: boolean): void;</p><p>设置手势滑动响应能力（结合长按游标能力使用）。</p><p>参数：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>enabled</td><td>boolean</td><td>是</td><td>能力标识。</td></tr></tbody></table><p>返回值：无</p><h2 id="_16-getswipeenabled" tabindex="-1"><strong>16.getSwipeEnabled</strong> <a class="header-anchor" href="#_16-getswipeenabled" aria-label="Permalink to &quot;**16.getSwipeEnabled**&quot;">​</a></h2><p>public getSwipeEnabled(): boolean;</p><p>获取手势滑动响应能力标识（结合长按游标能力使用）。</p><p>参数：无</p><p>返回值：</p><table tabindex="0"><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>boolean</td><td>手势滑动响应能力标识。</td></tr></tbody></table>',87)]))}const u=e(n,[["render",s]]);export{g as __pageData,u as default};
