import{_ as e,c as a,a7 as n,o as d}from"./chunks/framework.CS1J3kmr.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/api-YAxis.md","filePath":"guide/api-YAxis.md"}'),s={name:"guide/api-YAxis.md"};function i(r,t,l,o,p,h){return d(),a("div",null,t[0]||(t[0]=[n(`<h3 id="六、yaxis" tabindex="-1"><strong>六、YAxis</strong> <a class="header-anchor" href="#六、yaxis" aria-label="Permalink to &quot;**六、YAxis**&quot;">​</a></h3><p>Y轴对象。</p><table tabindex="0"><thead><tr><th>方法名</th><th>描述</th></tr></thead><tbody><tr><td>calculate</td><td>计算轴上的预期的最大最小值。</td></tr><tr><td>getAxisDependency</td><td>获取Y轴位置。</td></tr><tr><td>setPosition</td><td>设置Y轴标签的位置。</td></tr><tr><td>getLabelPosition</td><td>获取Y轴标签的位置。</td></tr><tr><td>setLabelXOffset</td><td>设置Y轴标签的X轴方向上的Offset。</td></tr><tr><td>getLabelXOffset</td><td>获取Y轴标签的X轴方向上的Offset。</td></tr><tr><td>setDrawZeroLine</td><td>设置是否绘制0线。</td></tr><tr><td>EventControl</td><td>事件控制类，EventType 为枚举类型(单击、双击、长按)</td></tr><tr><td>setEventEnable</td><td>启用事件。</td></tr><tr><td>setEventDisable</td><td>禁用事件。</td></tr><tr><td>eventIsEnable</td><td>事件是否启用。</td></tr><tr><td>eventIsDisable</td><td>事件是否被禁用。</td></tr><tr><td>setYAxisExtensionLine</td><td>设置y轴延伸线。</td></tr><tr><td>addGridLine</td><td>添加自定义网格线。</td></tr><tr><td>getGridLines</td><td>获取自定义网格线。</td></tr><tr><td>setGridAlpha</td><td>设置网格线颜色不透明度（不包含addGridLine添加的自定义网格线，自定义网格线可通过color属性传入带透明度的颜色）</td></tr></tbody></table><h2 id="_1-calculate" tabindex="-1"><strong>1.calculate</strong> <a class="header-anchor" href="#_1-calculate" aria-label="Permalink to &quot;**1.calculate**&quot;">​</a></h2><p>public calculate(dataMin: number, dataMax: number): void;</p><p>计算轴上的预期的最大最小值。</p><p>参数：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>dataMin</td><td>number</td><td>是</td><td>数据集合中的Y最小值。</td></tr><tr><td>dataMax</td><td>number</td><td>是</td><td>数据集合中的Y最大值</td></tr></tbody></table><h2 id="_2-getaxisdependency" tabindex="-1"><strong>2.getAxisDependency</strong> <a class="header-anchor" href="#_2-getaxisdependency" aria-label="Permalink to &quot;**2.getAxisDependency**&quot;">​</a></h2><p>public getAxisDependency(): AxisDependency;</p><p>获取Y轴位置。</p><p>返回值：</p><table tabindex="0"><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>number</td><td>获取Y轴位置。</td></tr></tbody></table><h2 id="_3-setposition" tabindex="-1"><strong>3.setPosition</strong> <a class="header-anchor" href="#_3-setposition" aria-label="Permalink to &quot;**3.setPosition**&quot;">​</a></h2><p>public setPosition(pos: YAxisLabelPosition): void;</p><p>设置Y轴标签的位置。</p><p>参数：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>pos</td><td>YAxisLabelPosition</td><td>是</td><td>设置Y轴标签的位置。</td></tr></tbody></table><h2 id="_4-getlabelposition" tabindex="-1"><strong>4.getLabelPosition</strong> <a class="header-anchor" href="#_4-getlabelposition" aria-label="Permalink to &quot;**4.getLabelPosition**&quot;">​</a></h2><p>public getLabelPosition(): YAxisLabelPosition;</p><p>获取Y轴标签的位置。</p><p>返回值：</p><table tabindex="0"><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>YAxisLabelPosition</td><td>获取Y轴标签位置。</td></tr></tbody></table><h2 id="_5-setlabelxoffset" tabindex="-1"><strong>5.setLabelXOffset</strong> <a class="header-anchor" href="#_5-setlabelxoffset" aria-label="Permalink to &quot;**5.setLabelXOffset**&quot;">​</a></h2><p>public setLabelXOffset(xOffset: number): void;</p><p>设置Y轴标签的X轴方向上的Offset。</p><p>参数：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>xOffset</td><td>number</td><td>是</td><td>设置Y轴标签的X轴方向上的Offset。</td></tr></tbody></table><h2 id="_6-getlabelxoffset" tabindex="-1"><strong>6.getLabelXOffset</strong> <a class="header-anchor" href="#_6-getlabelxoffset" aria-label="Permalink to &quot;**6.getLabelXOffset**&quot;">​</a></h2><p>public getLabelXOffset(): number;</p><p>获取Y轴标签的X轴方向上的Offset。</p><p>返回值：</p><table tabindex="0"><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>number</td><td>获取Y轴标签的X轴方向上的Offset。</td></tr></tbody></table><h2 id="_7-setdrawzeroline" tabindex="-1"><strong>7.setDrawZeroLine</strong> <a class="header-anchor" href="#_7-setdrawzeroline" aria-label="Permalink to &quot;**7.setDrawZeroLine**&quot;">​</a></h2><p>public setDrawZeroLine(mDrawZeroLine: boolean): void;</p><p>设置是否绘制0线。</p><p>参数：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>mDrawZeroLine</td><td>boolean</td><td>是</td><td>是否绘制0线。</td></tr></tbody></table><h2 id="_8-eventcontrol事件控制类" tabindex="-1"><strong>8.EventControl事件控制类</strong> <a class="header-anchor" href="#_8-eventcontrol事件控制类" aria-label="Permalink to &quot;**8.EventControl事件控制类**&quot;">​</a></h2><p>EventType 为枚举类型(单击、双击、长按)</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>enum EventType {</span></span>
<span class="line"><span>SingleTap,</span></span>
<span class="line"><span>DoubleTap,</span></span>
<span class="line"><span>LongPress</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="_9-seteventenable" tabindex="-1"><strong>9.setEventEnable</strong> <a class="header-anchor" href="#_9-seteventenable" aria-label="Permalink to &quot;**9.setEventEnable**&quot;">​</a></h2><p>public setEventEnable(evType: EventType): EventControl</p><p>启用事件</p><p>参数：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>evType</td><td>EventType</td><td>是</td><td>SingleTap、DoubleTap、LongPress三个选项</td></tr></tbody></table><h2 id="_10-seteventdisable" tabindex="-1"><strong>10.setEventDisable</strong> <a class="header-anchor" href="#_10-seteventdisable" aria-label="Permalink to &quot;**10.setEventDisable**&quot;">​</a></h2><p>public setEventDisable(evType: EventType): EventControl</p><p>禁用事件</p><p>参数：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>evType</td><td>EventType</td><td>是</td><td>SingleTap、DoubleTap、LongPress三个选项</td></tr></tbody></table><h2 id="_11-eventisenable" tabindex="-1"><strong>11.eventIsEnable</strong> <a class="header-anchor" href="#_11-eventisenable" aria-label="Permalink to &quot;**11.eventIsEnable**&quot;">​</a></h2><p>public eventIsEnable(evType: EventType): boolean;</p><p>事件是否启用。</p><p>参数：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>evType</td><td>EventType</td><td>是</td><td>SingleTap、DoubleTap、LongPress三个选项</td></tr></tbody></table><h2 id="_12-eventisdisable" tabindex="-1"><strong>12.eventIsDisable</strong> <a class="header-anchor" href="#_12-eventisdisable" aria-label="Permalink to &quot;**12.eventIsDisable**&quot;">​</a></h2><p>public eventIsDisable(evType: EventType): boolean;</p><p>事件是否被禁用。</p><p>参数：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>evType</td><td>EventType</td><td>是</td><td>SingleTap、DoubleTap、LongPress三个选项</td></tr></tbody></table><h2 id="_13-setyaxisextensionline" tabindex="-1"><strong>13.setYAxisExtensionLine</strong> <a class="header-anchor" href="#_13-setyaxisextensionline" aria-label="Permalink to &quot;**13.setYAxisExtensionLine**&quot;">​</a></h2><p>public setYAxisExtensionLine(opt: boolean): void</p><p>设置y轴延伸线。</p><p>参数：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>opt</td><td>boolean</td><td>是</td><td>是否绘制y轴延伸线。</td></tr></tbody></table><h2 id="_14-addgridline" tabindex="-1"><strong>14.addGridLine</strong> <a class="header-anchor" href="#_14-addgridline" aria-label="Permalink to &quot;**14.addGridLine**&quot;">​</a></h2><p>public addGridLine(customLine: GridLineConfig): void</p><p>添加自定义网格线。</p><p>参数：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>customLine</td><td>GridLineConfig</td><td>是</td><td>设置网格线样式。</td></tr></tbody></table><h2 id="_15-getgridlines" tabindex="-1"><strong>15.getGridLines</strong> <a class="header-anchor" href="#_15-getgridlines" aria-label="Permalink to &quot;**15.getGridLines**&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>public getGridLines(): JArrayList&lt;LimitLine&gt;</span></span></code></pre></div><p>获取自定义网格线。 返回值：</p><table tabindex="0"><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td><code>JArrayList&lt;LimitLine&gt;</code></td><td>自定义网格线数组</td></tr></tbody></table><h2 id="_16-setgridalpha" tabindex="-1"><strong>16.setGridAlpha</strong> <a class="header-anchor" href="#_16-setgridalpha" aria-label="Permalink to &quot;**16.setGridAlpha**&quot;">​</a></h2><p>public setGridAlpha(alpha: number): void</p><p>设置网格线颜色不透明度（不包含addGridLine添加的自定义网格线，自定义网格线可通过color属性传入带透明度的颜色）</p><p>参数：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>alpha</td><td>number</td><td>是</td><td>设置网格线颜色不透明度,取值0到255之间，0是完全透明，255是完全不透明</td></tr></tbody></table><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// 示例代码参见 CustomGridLineChartPage</span></span>
<span class="line"><span>export interface GridLineConfig {</span></span>
<span class="line"><span>   position: number;</span></span>
<span class="line"><span>   lineWidth?: number;</span></span>
<span class="line"><span>   lineColor?: number;</span></span>
<span class="line"><span>   dashPathEffect?: DashPathEffectConfig</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>export interface DashPathEffectConfig {</span></span>
<span class="line"><span>   lineLength: number;</span></span>
<span class="line"><span>   spaceLength: number;</span></span>
<span class="line"><span>   phase: number</span></span>
<span class="line"><span>}</span></span></code></pre></div>`,81)]))}const g=e(s,[["render",i]]);export{c as __pageData,g as default};
